/*
* ****************************************************
* * Aplicaci&oacute;n Base
* * Versi&oacute;n 1.0.0
* * Secretar&iacute;a de Gobernaci&oacute;n - DGTIC
* ****************************************************
*/
package mx.gob.segob.dgtic.web.mvc.views.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import mx.gob.segob.dgtic.web.mvc.dto.Horario;
import mx.gob.segob.dgtic.web.mvc.service.CatalogoService;

import java.io.IOException;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 * Controller donde se registran las vistas del aplicativo
 * 
 * Path : {contextoAplicacion}/
 */
@Controller
@RequestMapping( value = "/")
public class VistasController {	
	
	@Autowired
	private CatalogoService catalogoService; 
	
    /**
     * Vista principal : Path : {contextoAplicacion}/home
     * @param session the session
     * @return La vista de home
     */
    @RequestMapping(value={"","home"}, method = RequestMethod.GET)
    public String index(HttpSession session){ 
    	return "home";  
    }   
    
    /**
     * Vista donde se ubica el catálogo de horarios. Path : {contextoAplicacion}/catalogos/horario
     * @return La vista del menú de catálogos
     */
    @RequestMapping(value={"/catalogos/horario"}, method = RequestMethod.GET)
    public String obtieneHorarios(Model model) {
	    
	    model.addAttribute("listaHorarios", catalogoService.obtieneHorarios());
	    
    	return "/catalogos/horario";
    }
    
    @GetMapping("/catalogos/horario/busca")
    @ResponseBody
    public Horario buscaHorario(Integer id) {
    	
    	return catalogoService.buscaHorario(id);
    }
    
    @PostMapping("/catalogos/horario/modifica")
    public String modificaHorario(Integer id, String horaEntrada, String horaSalida, boolean activo) {
    	SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");

    	long milisegundosHoraEntrada = 0;
    	long milisegundosHoraSalida = 0;
    	
		try {
			milisegundosHoraEntrada = sdf.parse(horaEntrada).getTime();
			milisegundosHoraSalida = sdf.parse(horaSalida).getTime();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	Time SQLhoraEntrada = new Time(milisegundosHoraEntrada);
    	Time SQLhoraSalida = new Time(milisegundosHoraSalida);
    	
    	catalogoService.modificaHorario(new Horario(id, SQLhoraEntrada, SQLhoraSalida, activo));
    	
    	return "redirect:/catalogos/horario";
    }
    
    @PostMapping("/catalogos/horario/agrega")
    public String agregaHorario(Integer id, String horaEntrada, String horaSalida, boolean activo) {
    	SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");

    	long milisegundosHoraEntrada = 0;
    	long milisegundosHoraSalida = 0;
    	
		try {
			milisegundosHoraEntrada = sdf.parse(horaEntrada).getTime();
			milisegundosHoraSalida = sdf.parse(horaSalida).getTime();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	Time SQLhoraEntrada = new Time(milisegundosHoraEntrada);
    	Time SQLhoraSalida = new Time(milisegundosHoraSalida);
    	
    	catalogoService.agregaHorario(new Horario(id, SQLhoraEntrada, SQLhoraSalida, activo));
    	
    	return "redirect:/catalogos/horario";
    }
    
    @GetMapping("/catalogos/horario/elimina")
    public String eliminaHorario(Integer id) {
    	
    	catalogoService.eliminaHorario(id);
    	
    	return "redirect:/catalogos/horario";
    }
    
    
    ///
    //Vista de demo
    //
    ///
    /**
     * Vista donde se ubica el demo de formularios. Path : {contextoAplicacion}/demo/formularios
     * @return La vista de demo de formularios
     */
    @RequestMapping(value={"demo/formularios"}, method = RequestMethod.GET)
    public String demoFormulario(){ return "/demo/demoFormularios"; }
    
    /**
     * Vista donde se ubica el demo de la tabla. Path : {contextoAplicacion}/demo/tabla
     * @return La vista de demo de la tabla
     */
    @RequestMapping(value={"demo/tabla"}, method = RequestMethod.GET)
    public String demoTabla(){ return "/demo/demoTabla"; }
    
    /**
     * Vista donde se ubica el demo de validaciones. Path : {contextoAplicacion}/demo/jqueryValidator
     * @return La vista de demo de validaciones
     */
    @RequestMapping(value={"demo/jqueryValidator"}, method = RequestMethod.GET)
    public String demoValidaciones(){ return "/demo/demoJqueryValidator"; }
    
    /**
     * Vista donde se ubica el demo de ajax. Path : {contextoAplicacion}/demo/ajax
     * @return La vista de demo de ajax
     */
    @RequestMapping(value={"demo/ajax"}, method = RequestMethod.GET)
    public String demoAjax(){ return "/demo/demoAjax"; }
}
